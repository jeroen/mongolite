#!/usr/bin/env	bash
# Anticonf (tm) script by Jeroen Ooms (2020)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Special case: On MacOS we now use the native crypto instead of openssl
if [[ "$OSTYPE" == "darwin"* ]] && [[ -z "$MONGOLITE_USE_OPENSSL" ]]; then
  echo "Using native crypto for MacOS, don't need OpenSSL"
  cat src/osx/Makevars > src/Makevars
  exit 0
fi

# Library settings
PKG_CONFIG_NAME="openssl"
PKG_DEB_NAME="libssl-dev, libsasl2-dev"
PKG_RPM_NAME="openssl-devel, cyrus-sasl-devel"
PKG_CSW_NAME="libssl_dev, sasl_dev"
PKG_BREW_NAME="openssl@1.1"
PKG_TEST_FILE="src/tests/dependencies.c"
SASL_LIBS="-lsasl2"

# Hack for solaris
if [ $(uname) = "SunOS" ]; then
  SASL_LIBS="-lsasl"
fi

# Default
PKG_LIBS="-lssl -lcrypto $SASL_LIBS"

# Use pkg-config if openssl 1.0 is available
pkg-config ${PKG_CONFIG_NAME} --atleast-version=1.0.2
if [ $? -eq 0 ]; then
  PKGCONFIG_CFLAGS="$(pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME})"
  PKGCONFIG_LIBS="$(pkg-config --libs ${PKG_CONFIG_NAME})"
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS="${PKGCONFIG_CFLAGS}"
  PKG_LIBS="${SASL_LIBS} ${PKGCONFIG_LIBS}"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  if [ $(command -v brew) ]; then
    BREWDIR=$(brew --prefix)
    PKG_CFLAGS="-I$BREWDIR/opt/$PKG_BREW_NAME/include"
    PKG_LIBS="-L$BREWDIR/opt/$PKG_BREW_NAME/lib -lssl -lcrypto"
  else
    curl -sfL "https://autobrew.github.io/scripts/openssl" > $TMPDIR/autobrew
    source $TMPDIR/autobrew
  fi
  PKG_LIBS="$PKG_LIBS $SASL_LIBS"
fi

# Apple has deprecated SASL but there is no alternative yet
# NB: now unused because we use osx-Makevars
if [[ "$OSTYPE" == "darwin"* ]]; then
  PKG_CFLAGS="$PKG_CFLAGS -Wno-deprecated-declarations"
fi

# Linux, MacOS and Solaris use libresolv
if [[ "$OSTYPE" != *"bsd"* ]]; then
  PKG_LIBS="$PKG_LIBS -lresolv"
fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Find compiler
CC=$(${R_HOME}/bin/R CMD config CC)
CFLAGS=$(${R_HOME}/bin/R CMD config CFLAGS)
CPPFLAGS=$(${R_HOME}/bin/R CMD config CPPFLAGS)

# Test configuration
${CC} ${CPPFLAGS} ${PKG_CFLAGS} ${CFLAGS} -E ${PKG_TEST_FILE} >/dev/null 2>configure.log
if [ $? -ne 0 ]; then
  echo "-----------------------------[ ANTICONF ]-------------------------------"
  echo "Configuration failed to find SASL or OpenSSL. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * csw: $PKG_CSW_NAME (Solaris)"
  echo " * brew: $PKG_BREW_NAME (Mac OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "---------------------------[ ERROR MESSAGE ]----------------------------"
  cat configure.log
  echo "------------------------------------------------------------------------"
  exit 1
fi

# Feature test for 'sasl_client_done'
cd src
${CC} ./tests/has_sasl_client_done.c ${CPPFLAGS} ${PKG_CFLAGS} ${CFLAGS} ${PKG_LIBS} >/dev/null 2>&1 && HAS_SASL_CLIENT_DONE=1;
if [ $HAS_SASL_CLIENT_DONE ]; then
  echo "SASL has sasl_client_done."
  PKG_CFLAGS="$PKG_CFLAGS -DMONGOC_HAVE_SASL_CLIENT_DONE"
else
  echo "SASL does not have sasl_client_done."
fi

# Use optimization unless UBSAN is enabled
if [[ $CC == *"undefined"* ]]; then
  echo "Found UBSAN. Not using extra alignment."
else
  echo "Compiling with extra alignment."
  PKG_CFLAGS="$PKG_CFLAGS -DBSON_EXTRA_ALIGN"
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" Makevars.in > Makevars

# Success
exit 0
